<!doctype lake><meta name="doc-version" content="1" /><meta name="viewport" content="adapt" /><h1 data-lake-id="UBGKd" id="UBGKd"><span data-lake-id="ud7ab14e2" id="ud7ab14e2">动态规划</span></h1><h2 data-lake-id="RKKzJ" id="RKKzJ"><span data-lake-id="u44e43694" id="u44e43694">目录</span></h2><ul list="ua2a9cf70"><li fid="u9a66e2e4" data-lake-id="ucb3bccd0" id="ucb3bccd0"><a href="#解释" target="_blank" data-lake-id="u522cca95" id="u522cca95"><span data-lake-id="u6330f4be" id="u6330f4be">解释：</span></a></li><li fid="u9a66e2e4" data-lake-id="u13e1f922" id="u13e1f922"><a href="#心得" target="_blank" data-lake-id="u96107827" id="u96107827"><span data-lake-id="u63742b66" id="u63742b66">心得</span></a></li><li fid="u9a66e2e4" data-lake-id="ue1fd4a07" id="ue1fd4a07"><a href="#题目" target="_blank" data-lake-id="u04a40a10" id="u04a40a10"><span data-lake-id="u7b257d59" id="u7b257d59">题目</span></a></li></ul><h4 data-lake-id="i035x" id="i035x"><span data-lake-id="u5a944a02" id="u5a944a02">解释：</span></h4><ul list="uc5c3eee4"><li fid="ua3ddc91d" data-lake-id="ub94450e8" id="ub94450e8"><span data-lake-id="u217ddf13" id="u217ddf13">动态规划（英语：Dynamic programming，简称 DP）是一种在数学、管理科学、计算机科学、经济学和生物信息学中使用的，通过把原问题分解为相对简单的</span><span data-lake-id="u21e22ffa" id="u21e22ffa" style="color: #f00">子问题的方式求解</span><span data-lake-id="u1cef51fc" id="u1cef51fc">复杂问题的方法。</span></li><li fid="ua3ddc91d" data-lake-id="uc696eed4" id="uc696eed4"><span data-lake-id="u694b9beb" id="u694b9beb" style="color: #f00">动态规划常常适用于有重叠子问题和最优子结构性质的问题，并且记录所有子问题的结果，因此动态规划方法所耗时间往往远少于朴素解法。</span></li><li fid="ua3ddc91d" data-lake-id="ue17a6d2e" id="ue17a6d2e"><span data-lake-id="ude450c54" id="ude450c54">动态规划有</span><span data-lake-id="u7814cef3" id="u7814cef3" style="color: #f00">自底向上</span><span data-lake-id="udabb733b" id="udabb733b">和</span><span data-lake-id="u5a0cd81c" id="u5a0cd81c" style="color: #f00">自顶向下</span><span data-lake-id="u717f6d10" id="u717f6d10">两种解决问题的方式。自顶向下即记忆化递归，自底向上就是递推。</span></li></ul><p data-lake-id="u505941d7" id="u505941d7"><span data-lake-id="u3ea2b43d" id="u3ea2b43d">使用动态规划解决的问题有个明显的特点，一旦一个子问题的求解得到结果，以后的计算过程就不会修改它，这样的特点叫做无后效性，求解问题的过程形成了一张有向无环图。动态规划只解决每个子问题一次，具有天然剪枝的功能，从而减少计算量。</span></p><h4 data-lake-id="NmhSx" id="NmhSx"><span data-lake-id="ub1bd1238" id="ub1bd1238">心得</span></h4><p data-lake-id="uee1b4199" id="uee1b4199"><span data-lake-id="u2e534147" id="u2e534147">动态规划题目特点</span></p><ol list="ud6cabeb5"><li fid="u2eb27003" data-lake-id="uf3385f2f" id="uf3385f2f"><span data-lake-id="udee2460b" id="udee2460b">计数型</span></li><li fid="u2eb27003" data-lake-id="u733f4fa2" id="u733f4fa2"><span data-lake-id="u4b00bebf" id="u4b00bebf">多少方式走到右下角</span></li><li fid="u2eb27003" data-lake-id="u6e68376a" id="u6e68376a"><span data-lake-id="ud0e43f50" id="ud0e43f50">有多少种方法选出k个数的和是sum</span></li><li fid="u2eb27003" data-lake-id="u4c258e42" id="u4c258e42"><span data-lake-id="ua77bf138" id="ua77bf138">求最大最小数</span></li><li fid="u2eb27003" data-lake-id="u516a85d1" id="u516a85d1"><span data-lake-id="u1dbb21d4" id="u1dbb21d4">股票问题</span></li><li fid="u2eb27003" data-lake-id="uc9319413" id="uc9319413"><span data-lake-id="u933adb78" id="u933adb78">最长上升子序长度</span></li><li fid="u2eb27003" data-lake-id="u0866b114" id="u0866b114"><span data-lake-id="u89a9203b" id="u89a9203b">求存在性</span></li><li fid="u2eb27003" data-lake-id="u6103eb6e" id="u6103eb6e"><span data-lake-id="u4d5b2121" id="u4d5b2121">取石子游戏，先手是否必胜</span></li></ol><p data-lake-id="ue4092996" id="ue4092996"><span data-lake-id="ub9376fdd" id="ub9376fdd">做题步骤</span></p><ul list="ueea6729d"><li fid="u98a7f43e" data-lake-id="ue0976fa7" id="ue0976fa7"><span data-lake-id="ubb4c9b94" id="ubb4c9b94">确定状态</span></li><li fid="u98a7f43e" data-lake-id="u5e8a43ed" id="u5e8a43ed"><span data-lake-id="u33983548" id="u33983548">简单来说，一般动态规划都需要开一个数组，不管是几纬数组，都需要用确定这个下标中存的是什么。类似数学题中x代表什么。</span></li><li fid="u98a7f43e" data-lake-id="udb61e002" id="udb61e002"><span data-lake-id="u4ba1af0c" id="u4ba1af0c">两个意识：</span></li><li fid="u98a7f43e" data-lake-id="u3bb14720" id="u3bb14720"><span data-lake-id="u534e4672" id="u534e4672">最后一步。最优策略中的最后一步。</span></li><li fid="u98a7f43e" data-lake-id="u0187dea1" id="u0187dea1"><span data-lake-id="ua28c909d" id="ua28c909d">子问题。</span></li><li fid="u98a7f43e" data-lake-id="ucfbdfece" id="ucfbdfece"><span data-lake-id="u5e444137" id="u5e444137">转移方程</span></li><li fid="u98a7f43e" data-lake-id="u19d09630" id="u19d09630"><span data-lake-id="ue591bfef" id="ue591bfef">f</span><span data-lake-id="u9dcf1ba5" id="u9dcf1ba5">[</span><span data-lake-id="u752e1a0a" id="u752e1a0a">x] 应该就是要求出的那个值</span></li><li fid="u98a7f43e" data-lake-id="ubc67788c" id="ubc67788c"><span data-lake-id="u533de893" id="u533de893">初始条件和边界条件</span></li><li fid="u98a7f43e" data-lake-id="u251747c4" id="u251747c4"><span data-lake-id="u1076a737" id="u1076a737">初始条件：用转移方程算出来的，但是又需要手动定义。最小的情况</span></li><li fid="u98a7f43e" data-lake-id="u3d62fdd7" id="u3d62fdd7"><span data-lake-id="u88085c50" id="u88085c50">边界情况：不要让数组越界</span></li><li fid="u98a7f43e" data-lake-id="u6c453fb9" id="u6c453fb9"><span data-lake-id="u0df94649" id="u0df94649">计算顺序</span></li><li fid="u98a7f43e" data-lake-id="u6f88a2cf" id="u6f88a2cf"><span data-lake-id="u716a26bc" id="u716a26bc">当计算等式左边时，右边全都算过了，就是从小到大去算的。</span></li></ul><h4 data-lake-id="pCAzz" id="pCAzz"><span data-lake-id="ucb2a2ee2" id="ucb2a2ee2">题目</span></h4><h5 data-lake-id="pNS9e" id="pNS9e"><a href="https://leetcode.cn/problems/climbing-stairs/" target="_blank" data-lake-id="u7d1f8b43" id="u7d1f8b43"><span data-lake-id="uabd7ed66" id="uabd7ed66">70. 爬楼梯</span></a></h5><p data-lake-id="udfe3c47d" id="udfe3c47d"><a href="../../code/2.leetcode/70.爬楼梯.js" target="_blank" data-lake-id="ud84a8575" id="ud84a8575"><span data-lake-id="ud65796cc" id="ud65796cc">github</span></a></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20climbStairs2%20%3D%20(n)%20%3D%3E%20%7B%5Cn%20%20%20%20const%20dp%20%3D%20%5B%5D%5Cn%20%20%20%20dp%5B0%5D%20%3D%200%5Cn%20%20%20%20dp%5B1%5D%20%3D%201%5Cn%20%20%20%20dp%5B2%5D%20%3D%202%5Cn%5Cn%20%20%20%20for%20(let%20i%20%3D%203%3B%20i%20%3C%3D%20n%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20dp%5Bi%5D%20%3D%20dp%5Bi%20-%201%5D%20%2B%20dp%5Bi%20-%202%5D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20dp%5Bn%5D%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22MA17X%22%7D"></card><h5 data-lake-id="cDAOp" id="cDAOp"><a href="https://leetcode.cn/problems/fibonacci-number/" target="_blank" data-lake-id="u737cf6bd" id="u737cf6bd"><span data-lake-id="u662033f8" id="u662033f8">509. 斐波那契数</span></a></h5><p data-lake-id="ufc9abff0" id="ufc9abff0"><a href="../../code/2.leetcode/509.斐波那契数.js" target="_blank" data-lake-id="ufcf87939" id="ufcf87939"><span data-lake-id="ucec0aa36" id="ucec0aa36">github</span></a></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20fn2(n)%20%7B%5Cn%20%20%20%20const%20dp%20%3D%20new%20Array(n)%5Cn%20%20%20%20dp%5B0%5D%20%3D%200%5Cn%20%20%20%20dp%5B1%5D%20%3D%201%5Cn%5Cn%20%20%20%20for%20(let%20i%20%3D%202%3B%20i%20%3C%3D%20n%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20dp%5Bi%5D%20%3D%20dp%5Bi%20-%201%5D%20%2B%20dp%5Bi%20-%202%5D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20dp%5Bn%5D%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22ABPXP%22%7D"></card><h5 data-lake-id="KJdWq" id="KJdWq"><a href="https://leetcode.cn/problems/pascals-triangle/" target="_blank" data-lake-id="u4444bfe8" id="u4444bfe8"><span data-lake-id="u3aa1a039" id="u3aa1a039">118.杨辉三角</span></a></h5><p data-lake-id="u97eff445" id="u97eff445"><a href="../../code/2.leetcode/118.杨辉三角.js" target="_blank" data-lake-id="u0e74744f" id="u0e74744f"><span data-lake-id="uff5a8386" id="uff5a8386">github</span></a></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20generate%20%3D%20function%20(numRows)%20%7B%5Cn%20%20%20%20let%20dp%20%3D%20%5B%5D%5Cn%5Cn%20%20%20%20dp%5B0%5D%20%3D%20%5B1%5D%5Cn%5Cn%20%20%20%20for%20(let%20i%20%3D%201%3B%20i%20%3C%20numRows%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20const%20len%20%3D%20dp%5Bi%20-%201%5D.length%20%2B%201%5Cn%20%20%20%20%20%20%20%20dp%5Bi%5D%20%3D%20new%20Array(len)%5Cn%5Cn%20%20%20%20%20%20%20%20dp%5Bi%5D%5B0%5D%20%3D%201%5Cn%20%20%20%20%20%20%20%20for%20(let%20j%20%3D%201%3B%20j%20%3C%20len%20-%201%3B%20j%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20dp%5Bi%5D%5Bj%5D%20%3D%20dp%5Bi%20-%201%5D%5Bj%20-%201%5D%20%2B%20dp%5Bi%20-%201%5D%5Bj%5D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20dp%5Bi%5D%5Blen%20-%201%5D%20%3D%201%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20dp%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22O1nT3%22%7D"></card><p data-lake-id="u464c2954" id="u464c2954"><br></p><h5 data-lake-id="BnxcL" id="BnxcL"><a href="https://leetcode.cn/problems/counting-bits/" target="_blank" data-lake-id="uc00337ed" id="uc00337ed"><span data-lake-id="ud0dfe000" id="ud0dfe000">338.比特位计数</span></a></h5><h5 data-lake-id="h2kfk" id="h2kfk"><span data-lake-id="u5a55b840" id="u5a55b840">打家劫舍  198、213</span></h5><p data-lake-id="ud5feeed6" id="ud5feeed6"><span data-lake-id="u9f173df7" id="u9f173df7">不同路径</span></p><p data-lake-id="u77d26ee3" id="u77d26ee3"><span data-lake-id="u8d163f92" id="u8d163f92">股票问题</span></p><p data-lake-id="uf1a31a92" id="uf1a31a92"><br></p><h5 data-lake-id="o1N7F" id="o1N7F"><a href="../../code/2.leetcode/322.零钱兑换.js" target="_blank" data-lake-id="u7bd55e0e" id="u7bd55e0e"><span data-lake-id="u357aa421" id="u357aa421">322. 零钱兑换</span></a></h5><p data-lake-id="u0a9e2251" id="u0a9e2251"><a href="https://leetcode.cn/problems/coin-change/" target="_blank" data-lake-id="u5fb41ad4" id="u5fb41ad4"><span data-lake-id="uce65eddc" id="uce65eddc">leetcode</span></a></p><p data-lake-id="ua122c4eb" id="ua122c4eb"><br></p><blockquote data-lake-id="ud561fc88" id="ud561fc88"><p data-lake-id="u1e02c96e" id="u1e02c96e"><span data-lake-id="uf00aa3c7" id="uf00aa3c7">描述：<br />    给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。<br />    计算并返回可以凑成总金额所需的 最少的硬币个数 。如果没有任何一种硬币组合能组成总金额，返回 -1 。<br />    你可以认为每种硬币的数量是无限的。</span></p></blockquote><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%E7%A4%BA%E4%BE%8B1%EF%BC%9A%5Cn%E8%BE%93%E5%85%A5%EF%BC%9Acoins%20%3D%20%5B1%2C%202%2C%205%5D%2C%20amount%20%3D%2011%5Cn%E8%BE%93%E5%87%BA%EF%BC%9A3%20%5Cn%E8%A7%A3%E9%87%8A%EF%BC%9A11%20%3D%205%20%2B%205%20%2B%201%5Cn%5Cn%E7%A4%BA%E4%BE%8B2%EF%BC%9A%5Cn%20%20%20%20%E8%BE%93%E5%85%A5%EF%BC%9Acoins%20%3D%20%5B2%5D%2C%20amount%20%3D%203%5Cn%20%20%20%20%E8%BE%93%E5%87%BA%EF%BC%9A-1%5Cn%5Cn%E7%A4%BA%E4%BE%8B3%EF%BC%9A%5Cn%20%20%20%20%E8%BE%93%E5%85%A5%EF%BC%9Acoins%20%3D%20%5B1%5D%2C%20amount%20%3D%200%5Cn%20%20%20%20%E8%BE%93%E5%87%BA%EF%BC%9A0%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22NN7r8%22%7D"></card><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20coinChange(coins%2C%20amount)%20%7B%5Cn%20%20%20%20%2F%2F%20%E9%80%A0%E4%B8%80%E4%B8%AAdp%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%5Cn%20%20%20%20const%20dp%20%3D%20new%20Array(amount%20%2B%201)%5Cn%20%20%20%20%5Cn%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E5%88%9D%E5%A7%8B%E5%80%BC%5Cn%20%20%20%20dp%5B0%5D%20%3D%200%5Cn%20%20%20%20%5Cn%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E5%90%8E%E7%BB%AD%E7%9A%84%E5%80%BC%5Cn%20%20%20%20for%20(let%20i%20%3D%201%3B%20i%20%3C%3D%20amount%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20let%20min%20%3D%20Infinity%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E6%AF%8F%E4%B8%80%E7%A7%8D%E7%A1%AC%E5%B8%81%E5%AF%B9%E5%BA%94%E4%BD%BF%E7%94%A8%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E9%87%8F%EF%BC%8C%E4%BD%BF%E7%94%A8min%E5%8F%98%E9%87%8F%E8%AE%B0%E5%BD%95%E6%9C%80%E5%B0%8F%E5%80%BC%5Cn%20%20%20%20%20%20%20%20for%20(let%20coin%20of%20coins)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(i%20-%20coin%20%3E%3D%200%20%26%26%20dp%5Bi%20-%20coin%5D%20!%3D%3D%20-1)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20min%20%3D%20Math.min(min%2C%20dp%5Bi%20-%20coin%5D%20%2B%201)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E5%A6%82%E6%9E%9C%E6%98%AF%E5%BD%93%E5%89%8D%E9%87%91%E9%A2%9D%E7%9A%84%E8%AF%9D%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%8F%E7%A1%AC%E5%B8%81%E6%95%B0%E9%87%8F%5Cn%20%20%20%20%20%20%20%20dp%5Bi%5D%20%3D%20min%20%3D%3D%3D%20Infinity%20%3F%20-1%20%3A%20min%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%2F%2F%20%E8%BF%94%E5%9B%9E%E6%89%80%E9%9C%80%E9%87%91%E9%A2%9D%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E9%87%8F%5Cn%20%20%20%20return%20dp%5Bamount%5D%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22T8K82%22%7D"></card>