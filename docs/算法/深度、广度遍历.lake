<!doctype lake><meta name="doc-version" content="1" /><meta name="viewport" content="adapt" /><h2 data-lake-id="dhWNR" id="dhWNR"><span data-lake-id="u1c116038" id="u1c116038">总结</span></h2><p data-lake-id="u28545564" id="u28545564"><span data-lake-id="u676022c1" id="u676022c1">DFS和BFS都属于树/图的搜索算法，两者在用于具体问题时各有优劣：</span></p><ul list="u09411727"><li fid="u48aa7e67" data-lake-id="u6c3f41c3" id="u6c3f41c3"><span data-lake-id="u8551e594" id="u8551e594">求给定图中两点之间最短路径或检验图的二分性，使用BFS更优</span></li><li fid="u48aa7e67" data-lake-id="u9da70851" id="u9da70851"><span data-lake-id="u64dd3327" id="u64dd3327">求无向图的连通分量数量，两者差不多</span></li><li fid="u48aa7e67" data-lake-id="u15d6e243" id="u15d6e243"><span data-lake-id="uf59c2469" id="uf59c2469">两者在实现过程中使用的基础数据结构也有区别。在实际做题当中，一般使用栈来实现DFS，使用队列来实现BFS</span></li><li fid="u48aa7e67" data-lake-id="u0e940f18" id="u0e940f18"><span data-lake-id="ub03f9eec" id="ub03f9eec">DFS和回溯算法之间的关系界线是模糊的，网上的说法也各不一样，在这里我们没必要过于纠结其精确的定义</span></li><li fid="u48aa7e67" data-lake-id="u13059087" id="u13059087"><span data-lake-id="u546f926a" id="u546f926a">在二叉树中，DFS可以被分为前序遍历、中序遍历和后序遍历（105、106）</span></li><li fid="u48aa7e67" data-lake-id="u56dab785" id="u56dab785"><span data-lake-id="ub05861b5" id="ub05861b5">径和问题、岛屿问题只详细讲述了两种算法的基本写法，而在实际的刷题过程中，可能会使用这两种基本写法的变种或延伸，比如运用双向搜索</span></li></ul><h2 data-lake-id="fVrbx" id="fVrbx"><span data-lake-id="uef680338" id="uef680338">深度优先遍历 DFS</span></h2><p data-lake-id="u0bcdf392" id="u0bcdf392"><span data-lake-id="u87d35d5e" id="u87d35d5e">使用DFS进行解题的大概思路是定义起始节点和结束节点，从起点开始不断深入其他节点。</span></p><ul list="u4e591cfa"><li fid="u287b5b76" data-lake-id="u715fd22f" id="u715fd22f"><span data-lake-id="u2025503f" id="u2025503f">大多数有关树的题目使用后序遍历会比较简单，并且大多需要依赖左/右子树的返回值。例如第1448题统计二叉树中好节点的数目。</span></li><li fid="u287b5b76" data-lake-id="uf0bb0816" id="uf0bb0816"><span data-lake-id="u60f2ddf1" id="u60f2ddf1">也有一部分有关树的题目需要前序遍历，而前序遍历通常要结合参数扩展技巧。例如第1022题从根到叶的二进制数之和。</span></li><li fid="u287b5b76" data-lake-id="u51449f38" id="u51449f38"><span data-lake-id="u256f5f85" id="u256f5f85">如果能使用参数和节点本身的值来决定应该传递给它的子节点的参数，那么就用前序遍历</span></li><li fid="u287b5b76" data-lake-id="udad00f2a" id="udad00f2a"><span data-lake-id="ud89c7e4c" id="ud89c7e4c">对于树中的任意一个节点，如果知道它子节点的答案，就能计算出当前节点的答案，那么就用后序遍历。</span></li><li fid="u287b5b76" data-lake-id="u9793a509" id="u9793a509"><span data-lake-id="u470ff3e8" id="u470ff3e8">如果遇到二叉搜索树，则考虑使用中序遍历。</span></li></ul><h2 data-lake-id="eGVJr" id="eGVJr"><span data-lake-id="u99282f3c" id="u99282f3c">广度优先遍历 BFS</span></h2><p data-lake-id="uaddaa7d4" id="uaddaa7d4"><span data-lake-id="u6b2bd8cd" id="u6b2bd8cd">BFS和DFS只是遍历的方向不同，即上面提到的DFS是尽可能深地搜索树的分支，而BFS则是一层一层地访问节点。相对于DFS来说，BFS的变种比较少，能解决的问题种类比较单一。</span></p><ul list="uf71d98dd"><li fid="u3dbd096b" data-lake-id="u9133245e" id="u9133245e"><span data-lake-id="ude116a3f" id="ude116a3f">BFS比较适合用来找最短距离，因此如果题目中提到了最短距离，首先应该想到使用BFS</span></li></ul><h2 data-lake-id="hqjj4" id="hqjj4"><span data-lake-id="u5fe6abe3" id="u5fe6abe3">路径和问题</span></h2><ul list="u620e9fad"><li fid="u6b4cf936" data-lake-id="u58853024" id="u58853024"><a href="https://leetcode.cn/problems/path-sum/description/" target="_blank" data-lake-id="ua4c329f6" id="ua4c329f6"><span data-lake-id="ub95d4e46" id="ub95d4e46">112.路径总和</span></a></li></ul><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%20%5Cn%E7%BB%99%E4%BD%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%A0%B9%E8%8A%82%E7%82%B9%20root%20%E5%92%8C%E4%B8%80%E4%B8%AA%E8%A1%A8%E7%A4%BA%E7%9B%AE%E6%A0%87%E5%92%8C%E7%9A%84%E6%95%B4%E6%95%B0%20targetSum%20%E3%80%82%E5%88%A4%E6%96%AD%E8%AF%A5%E6%A0%91%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%20%E6%A0%B9%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20%E7%9A%84%E8%B7%AF%E5%BE%84%EF%BC%8C%E8%BF%99%E6%9D%A1%E8%B7%AF%E5%BE%84%E4%B8%8A%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E5%80%BC%E7%9B%B8%E5%8A%A0%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E5%92%8C%20targetSum%20%E3%80%82%E5%A6%82%E6%9E%9C%E5%AD%98%E5%9C%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%20true%20%EF%BC%9B%E5%90%A6%E5%88%99%EF%BC%8C%E8%BF%94%E5%9B%9E%20false%20%E3%80%82%5Cn%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20%E6%98%AF%E6%8C%87%E6%B2%A1%E6%9C%89%E5%AD%90%E8%8A%82%E7%82%B9%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%82%5Cn%20*%2F%5Cn%2F%2F%20%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86%5Cnfunction%20hasPathSum1(root%2C%20targetSum)%20%7B%5Cn%20%20%20%20if%20(!root)%20return%20false%5Cn%20%20%20%20let%20ret%20%3D%20false%5Cn%5Cn%20%20%20%20function%20dfs(node%2C%20sum%2C%20isEnd)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(!node)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(sum%20%3D%3D%3D%20targetSum%20%26%26%20isEnd)%20ret%20%3D%20true%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20sum%20%2B%3D%20node.val%5Cn%20%20%20%20%20%20%20%20const%20end%20%3D%20node.left%20%3D%3D%3D%20null%20%26%26%20node.right%20%3D%3D%3D%20null%5Cn%5Cn%20%20%20%20%20%20%20%20dfs(node.left%2C%20sum%2C%20end)%5Cn%20%20%20%20%20%20%20%20dfs(node.right%2C%20sum%2C%20end)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20dfs(root%2C%200)%5Cn%20%20%20%20return%20ret%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22SOuqy%22%7D"></card><ul list="u12882206"><li fid="ub5ca8fcf" data-lake-id="u8671c1bc" id="u8671c1bc"><a href="https://leetcode.cn/problems/path-sum-ii/description/" target="_blank" data-lake-id="ua4707259" id="ua4707259"><span data-lake-id="u96d5a5ec" id="u96d5a5ec">113.路径总和 II</span></a></li></ul><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%E7%BB%99%E4%BD%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%A0%B9%E8%8A%82%E7%82%B9%20root%20%E5%92%8C%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E7%9B%AE%E6%A0%87%E5%92%8C%20targetSum%20%EF%BC%8C%E6%89%BE%E5%87%BA%E6%89%80%E6%9C%89%20%E4%BB%8E%E6%A0%B9%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%E7%AD%89%E4%BA%8E%E7%BB%99%E5%AE%9A%E7%9B%AE%E6%A0%87%E5%92%8C%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%82%5Cn%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%20%E6%98%AF%E6%8C%87%E6%B2%A1%E6%9C%89%E5%AD%90%E8%8A%82%E7%82%B9%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%82%5Cn%20*%2F%5Cn%2F%2F%20%E5%9B%9E%E6%BA%AF%5Cnfunction%20pathSum1(root%2C%20targetSum)%20%7B%5Cn%20%20%20%20const%20ret%20%3D%20%5B%5D%5Cn%20%20%20%20const%20path%20%3D%20%5B%5D%5Cn%20%20%20%20let%20sum%20%3D%200%5Cn%5Cn%20%20%20%20function%20dfs(node)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(!node)%20return%5Cn%20%20%20%20%20%20%20%20path.push(node.val)%5Cn%20%20%20%20%20%20%20%20sum%20%2B%3D%20node.val%5Cn%20%20%20%20%20%20%20%20if%20(sum%20%3D%3D%3D%20targetSum%20%26%26%20!node.left%20%26%26%20!node.right)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20ret.push(path.slice())%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20dfs(node.left)%5Cn%20%20%20%20%20%20%20%20dfs(node.right)%5Cn%20%20%20%20%20%20%20%20path.pop()%5Cn%20%20%20%20%20%20%20%20sum%20-%3D%20node.val%5Cn%20%20%20%20%7D%5Cn%20%20%20%20dfs(root)%5Cn%20%20%20%20return%20ret%5Cn%7D%5Cn%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22yy2sH%22%7D"></card><ul list="u77d36df0"><li fid="uf79e5c9b" data-lake-id="ue4c4ef52" id="ue4c4ef52"><a href="https://leetcode.cn/problems/binary-tree-maximum-path-sum/description/" target="_blank" data-lake-id="ufc83d351" id="ufc83d351"><span data-lake-id="u7d47ceb2" id="u7d47ceb2">124.二叉树中的最大路径和</span></a></li></ul><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%20%5Cn%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%20%E8%B7%AF%E5%BE%84%20%E8%A2%AB%E5%AE%9A%E4%B9%89%E4%B8%BA%E4%B8%80%E6%9D%A1%E8%8A%82%E7%82%B9%E5%BA%8F%E5%88%97%EF%BC%8C%E5%BA%8F%E5%88%97%E4%B8%AD%E6%AF%8F%E5%AF%B9%E7%9B%B8%E9%82%BB%E8%8A%82%E7%82%B9%E4%B9%8B%E9%97%B4%E9%83%BD%E5%AD%98%E5%9C%A8%E4%B8%80%E6%9D%A1%E8%BE%B9%E3%80%82%E5%90%8C%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E5%9C%A8%20%E4%B8%80%E6%9D%A1%E8%B7%AF%E5%BE%84%E5%BA%8F%E5%88%97%E4%B8%AD%20%E8%87%B3%E5%A4%9A%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%20%E3%80%82%E8%AF%A5%E8%B7%AF%E5%BE%84%20%E8%87%B3%E5%B0%91%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%20%E8%8A%82%E7%82%B9%EF%BC%8C%E4%B8%94%E4%B8%8D%E4%B8%80%E5%AE%9A%E7%BB%8F%E8%BF%87%E6%A0%B9%E8%8A%82%E7%82%B9%E3%80%82%5Cn%E8%B7%AF%E5%BE%84%E5%92%8C%20%E6%98%AF%E8%B7%AF%E5%BE%84%E4%B8%AD%E5%90%84%E8%8A%82%E7%82%B9%E5%80%BC%E7%9A%84%E6%80%BB%E5%92%8C%E3%80%82%5Cn%E7%BB%99%E4%BD%A0%E4%B8%80%E4%B8%AA%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%A0%B9%E8%8A%82%E7%82%B9%20root%20%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%85%B6%20%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C%20%E3%80%82%5Cn%20*%2F%5Cn%2F%2F%20%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%5Cnvar%20maxPathSum%20%3D%20function%20(root)%20%7B%5Cn%20%20%20%20%2F%2F%20%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%88%9D%E5%A7%8B%E7%9A%84ret%E8%B5%8B%E5%80%BC%E4%B8%BA%E6%9C%80%E5%B0%8F%E5%80%BC%5Cn%20%20%20%20let%20ret%20%3D%20-Infinity%5Cn%5Cn%20%20%20%20%2F%2F%20%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86%5Cn%20%20%20%20function%20dfs(node)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%AD%98%E5%9C%A8%E8%8A%82%E7%82%B9%E5%88%99%E8%BF%94%E5%9B%9E0%5Cn%20%20%20%20%20%20%20%20if%20(!node)%20return%200%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E8%8A%82%E7%82%B9%E7%9A%84%E5%B7%A6%E8%8A%82%E7%82%B9%E6%9C%80%E5%A4%A7%E5%80%BC%EF%BC%8C%E5%B9%B6%E4%B8%8E0%E6%AF%94%E8%BE%83%EF%BC%8C%E4%B8%8E0%E6%AF%94%E8%BE%83%E5%BC%8F%E5%9B%A0%E4%B8%BA%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%AD%90%E8%8A%82%E7%82%B9%E5%B0%8F%E4%BA%8E0%E7%9A%84%E8%AF%9D%EF%BC%8C%E5%B0%B1%E6%B2%A1%E6%9C%89%E5%BF%85%E8%A6%81%E5%8A%A0%E8%B5%B7%E6%9D%A5%E4%BA%86%5Cn%20%20%20%20%20%20%20%20const%20leftVal%20%3D%20Math.max(dfs(node.left)%2C%200)%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%8F%B3%E8%8A%82%E7%82%B9%E5%90%8C%E7%90%86%5Cn%20%20%20%20%20%20%20%20const%20rightVal%20%3D%20Math.max(dfs(node.right)%2C%200)%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%90%8E%E7%BB%AD%E9%81%8D%E5%8E%86%EF%BC%8C%E4%BB%8E%E5%BA%95%E5%BE%80%E4%B8%8A%E5%88%A4%E6%96%AD%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%8E%B7%E5%8F%96%E6%9C%80%E5%A4%A7%E7%9A%84%E5%AD%90%E8%8A%82%E7%82%B9%EF%BC%8C%E5%88%A4%E6%96%AD%E7%94%A8%E5%93%AA%E4%B8%AA%E4%B8%80%E4%B8%AA%E5%88%86%E6%94%AF%5Cn%20%20%20%20%20%20%20%20const%20maxVal%20%3D%20Math.max(leftVal%2C%20rightVal)%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E6%9C%80%E5%A4%A7%E5%80%BC%E5%AF%B9%E6%AF%94%E9%80%BB%E8%BE%91%EF%BC%88%E5%AD%90%E6%94%AF%E5%AF%B9%E6%AF%94%EF%BC%89%5Cn%20%20%20%20%20%20%20%20let%20sum%20%3D%20node.val%20%2B%20leftVal%20%2B%20rightVal%5Cn%20%20%20%20%20%20%20%20if%20(sum%20%3E%20ret)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20ret%20%3D%20sum%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20return%20maxVal%20%2B%20node.val%5Cn%20%20%20%20%7D%5Cn%20%20%20%20dfs(root)%5Cn%5Cn%20%20%20%20return%20ret%5Cn%7D%3B%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22LWu5x%22%7D"></card><h2 data-lake-id="ljLjx" id="ljLjx"><span data-lake-id="uab35eb52" id="uab35eb52">岛屿问题</span></h2><ul list="uf66dfae0"><li fid="u9cc9cc20" data-lake-id="u735b744e" id="u735b744e"><a href="https://leetcode.cn/problems/number-of-islands/description/" target="_blank" data-lake-id="ud297555e" id="ud297555e"><span data-lake-id="ue09a4f9f" id="ue09a4f9f">200.岛屿数量</span></a></li></ul><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F*%5Cn%20%20%20%20%E7%BB%99%E4%BD%A0%E4%B8%80%E4%B8%AA%E7%94%B1%20'1'%EF%BC%88%E9%99%86%E5%9C%B0%EF%BC%89%E5%92%8C%20'0'%EF%BC%88%E6%B0%B4%EF%BC%89%E7%BB%84%E6%88%90%E7%9A%84%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%BD%91%E6%A0%BC%EF%BC%8C%E8%AF%B7%E4%BD%A0%E8%AE%A1%E7%AE%97%E7%BD%91%E6%A0%BC%E4%B8%AD%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%82%5Cn%20%20%20%20%E5%B2%9B%E5%B1%BF%E6%80%BB%E6%98%AF%E8%A2%AB%E6%B0%B4%E5%8C%85%E5%9B%B4%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%AF%8F%E5%BA%A7%E5%B2%9B%E5%B1%BF%E5%8F%AA%E8%83%BD%E7%94%B1%E6%B0%B4%E5%B9%B3%E6%96%B9%E5%90%91%E5%92%8C%2F%E6%88%96%E7%AB%96%E7%9B%B4%E6%96%B9%E5%90%91%E4%B8%8A%E7%9B%B8%E9%82%BB%E7%9A%84%E9%99%86%E5%9C%B0%E8%BF%9E%E6%8E%A5%E5%BD%A2%E6%88%90%E3%80%82%5Cn%20%20%20%20%E6%AD%A4%E5%A4%96%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%81%87%E8%AE%BE%E8%AF%A5%E7%BD%91%E6%A0%BC%E7%9A%84%E5%9B%9B%E6%9D%A1%E8%BE%B9%E5%9D%87%E8%A2%AB%E6%B0%B4%E5%8C%85%E5%9B%B4%E3%80%82%5Cn%20*%2F%5Cn%5Cnvar%20numIslands%20%3D%20function%20(grid)%20%7B%5Cn%20%20%20%20%2F%2F%20%E6%AF%8F%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E5%BC%80%E5%A7%8B%E9%83%BD%E5%BC%80%E5%A7%8Bdfs%EF%BC%88%E5%9B%9B%E4%B8%AA%E6%96%B9%E5%90%91%EF%BC%89%EF%BC%8C%E4%BD%86%E6%98%AF%E8%A6%81%E7%BB%99%E6%AF%8F%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E6%B7%BB%E5%8A%A0visited%E6%A0%87%E8%AE%B0%EF%BC%8C%E8%AE%BF%E9%97%AE%E8%BF%87%E4%B9%8B%E5%90%8E%E5%B0%B1%E4%B8%8D%E5%9C%A8%E8%AE%BF%E9%97%AE%5Cn%20%20%20%20let%20ret%20%3D%200%5Cn%20%20%20%20const%20n%20%3D%20grid.length%5Cn%20%20%20%20const%20m%20%3D%20grid%5B0%5D.length%5Cn%5Cn%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20n%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20for%20(let%20j%20%3D%200%3B%20j%20%3C%20m%3B%20j%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(grid%5Bi%5D%5Bj%5D%20!%3D%3D%202)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20dfs(i%2C%20j%2C%201)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20function%20dfs(i%2C%20j%2C%20type)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(i%20%3C%200%20%7C%7C%20j%20%3C%200%20%7C%7C%20i%20%3E%3D%20n%20%7C%7C%20j%20%3E%3D%20m)%20return%5Cn%20%20%20%20%20%20%20%20if%20(grid%5Bi%5D%5Bj%5D%20%3D%3D%3D%202%20%7C%7C%20grid%5Bi%5D%5Bj%5D%20%3D%3D%3D%20'0')%20return%5Cn%5Cn%20%20%20%20%20%20%20%20if%20(type%20%3D%3D%3D%201%20%26%26%20grid%5Bi%5D%5Bj%5D%20%3D%3D%3D%20'1')%20ret%2B%2B%5Cn%5Cn%20%20%20%20%20%20%20%20if%20(grid%5Bi%5D%5Bj%5D%20%3D%3D%3D%20'1')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20grid%5Bi%5D%5Bj%5D%20%3D%202%5Cn%20%20%20%20%20%20%20%20%20%20%20%20dfs(i%20-%201%2C%20j%2C%200)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20dfs(i%20%2B%201%2C%20j%2C%200)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20dfs(i%2C%20j%20-%201%2C%200)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20dfs(i%2C%20j%20%2B%201%2C%200)%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20ret%5Cn%7D%3B%5Cn%2F%2F%20%40lc%20code%3Dend%5Cn%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22uwNWq%22%7D"></card><ul list="u2c563705"><li fid="u7c6830ef" data-lake-id="uf13de112" id="uf13de112"><a href="https://leetcode.cn/problems/max-area-of-island/description/" target="_blank" data-lake-id="uee7d3ad8" id="uee7d3ad8"><span data-lake-id="udd030fff" id="udd030fff">695.岛屿的最大面积</span></a></li></ul><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22hideToolbar%22%3Atrue%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%20*%20%5Cn%E7%BB%99%E4%BD%A0%E4%B8%80%E4%B8%AA%E5%A4%A7%E5%B0%8F%E4%B8%BA%20m%20x%20n%20%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%20grid%20%E3%80%82%5Cn%E5%B2%9B%E5%B1%BF%20%E6%98%AF%E7%94%B1%E4%B8%80%E4%BA%9B%E7%9B%B8%E9%82%BB%E7%9A%84%201%20(%E4%BB%A3%E8%A1%A8%E5%9C%9F%E5%9C%B0)%20%E6%9E%84%E6%88%90%E7%9A%84%E7%BB%84%E5%90%88%EF%BC%8C%E8%BF%99%E9%87%8C%E7%9A%84%E3%80%8C%E7%9B%B8%E9%82%BB%E3%80%8D%E8%A6%81%E6%B1%82%E4%B8%A4%E4%B8%AA%201%20%E5%BF%85%E9%A1%BB%E5%9C%A8%20%E6%B0%B4%E5%B9%B3%E6%88%96%E8%80%85%E7%AB%96%E7%9B%B4%E7%9A%84%E5%9B%9B%E4%B8%AA%E6%96%B9%E5%90%91%E4%B8%8A%20%E7%9B%B8%E9%82%BB%E3%80%82%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%81%87%E8%AE%BE%20grid%20%E7%9A%84%E5%9B%9B%E4%B8%AA%E8%BE%B9%E7%BC%98%E9%83%BD%E8%A2%AB%200%EF%BC%88%E4%BB%A3%E8%A1%A8%E6%B0%B4%EF%BC%89%E5%8C%85%E5%9B%B4%E7%9D%80%E3%80%82%5Cn%E5%B2%9B%E5%B1%BF%E7%9A%84%E9%9D%A2%E7%A7%AF%E6%98%AF%E5%B2%9B%E4%B8%8A%E5%80%BC%E4%B8%BA%201%20%E7%9A%84%E5%8D%95%E5%85%83%E6%A0%BC%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%82%5Cn%E8%AE%A1%E7%AE%97%E5%B9%B6%E8%BF%94%E5%9B%9E%20grid%20%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E5%B2%9B%E5%B1%BF%E9%9D%A2%E7%A7%AF%E3%80%82%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E5%B2%9B%E5%B1%BF%EF%BC%8C%E5%88%99%E8%BF%94%E5%9B%9E%E9%9D%A2%E7%A7%AF%E4%B8%BA%200%20%5Cn%20*%2F%5Cn%5Cnvar%20maxAreaOfIsland%20%3D%20function%20(grid)%20%7B%5Cn%20%20%20%20const%20m%20%3D%20grid.length%5Cn%20%20%20%20const%20n%20%3D%20grid%5B0%5D.length%5Cn%20%20%20%20let%20ans%20%3D%200%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20m%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20for%20(let%20j%20%3D%200%3B%20j%20%3C%20n%3B%20j%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20ans%20%3D%20Math.max(ans%2C%20dfs(i%2C%20j))%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20function%20dfs(i%2C%20j)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(i%20%3E%20m%20-%201%20%7C%7C%20j%20%3E%20n%20-%201%20%7C%7C%20i%20%3C%200%20%7C%7C%20j%20%3C%200)%20return%200%5Cn%20%20%20%20%20%20%20%20if%20(grid%5Bi%5D%5Bj%5D%20%3D%3D%3D%202%20%7C%7C%20grid%5Bi%5D%5Bj%5D%20%3D%3D%3D%200)%20return%200%5Cn%20%20%20%20%20%20%20%20grid%5Bi%5D%5Bj%5D%20%3D%202%5Cn%20%20%20%20%20%20%20%20let%20area%20%3D%201%5Cn%20%20%20%20%20%20%20%20area%20%3D%20area%20%2B%20dfs(i%20-%201%2C%20j)%5Cn%20%20%20%20%20%20%20%20area%20%3D%20area%20%2B%20dfs(i%20%2B%201%2C%20j)%5Cn%20%20%20%20%20%20%20%20area%20%3D%20area%20%2B%20dfs(i%2C%20j%20%2B%201)%5Cn%20%20%20%20%20%20%20%20area%20%3D%20area%20%2B%20dfs(i%2C%20j%20-%201)%5Cn%5Cn%20%20%20%20%20%20%20%20return%20area%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20ans%5Cn%7D%3B%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22uBu26%22%7D"></card><ul list="ub1f80fb4"><li fid="u4f2db139" data-lake-id="u44fb2437" id="u44fb2437"><a href="https://leetcode.cn/problems/island-perimeter/description/" target="_blank" data-lake-id="u65093b47" id="u65093b47"><span data-lake-id="ua82a3e1f" id="ua82a3e1f">463.岛屿周长</span></a></li></ul>